#user  nginx;这是 Nginx 自带的默认用户配置。在许多 Linux 发行版中，当您安装 Nginx 时，
#它会自动创建一个名为 nginx 的用户和组，并将其用作默认的运行用户。
#这是为了增加安全性，以防止 Nginx 进程以超级用户权限运行，从而减少潜在的风险。
user  nginx;
worker_processes  1;

#指定了错误日志的路径和日志级别
error_log  /var/log/nginx/error.log warn;
#定义了 Nginx 进程的 PID 文件路径
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

#定义了一个名为 main 的日志格式。它使用了 Nginx 的变量来指定日志记录的内容
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

#指定了日志文件的路径和所使用的日志格式
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

#表示将匹配该路径下所有以 .conf 结尾的文件都包含进来。
#这样可以将其他配置文件模块化地组织在不同的文件中，以便于管理和维护。
#通常情况下，您可以在 /etc/nginx/conf.d/ 目录中放置额外的配置文件，然后使用 include 指令将它们包含到主配置文件中。
	# include /etc/nginx/conf.d/*.conf;

  	server {
       listen       80;
       charset utf-8;
       server_name  localhost;# 服务器地址或绑定域名

    	# start ---------------------------------------------------------------------------------------------

         location / {
            	root   /usr/share/nginx/html;
            	index  index.html index.htm;
	    	try_files $uri $uri/ /index.html;
        }

	location /api{
		valid_referers 120.76.99.240;
		if ($invalid_referer) { 
		return 401; 
	}
		proxy_pass http://120.76.99.240:8081;
	}


        # end ---------------------------------------------------------------------------------------------

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
   }
} 